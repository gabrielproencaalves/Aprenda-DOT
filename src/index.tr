.fam H

.TL
Guia introdutório de
.I
DOT
.AU
Gabriel Proença Alves

.AB no
.AE

.NH 1
Prólogo

.NH 2
O que é DOT?

.PP
DOT é uma linguagem de marcação utilizada para construir
documentos contendo redes de informações, informações
estruturadas, grafos descritivos e diagramas.

.PP
Uma das principais características da linguagem é a sua
simplicidade. Por meio dela, podemos escrever documentos
de forma prática e personalizável, sem gastarmos muito
tempo com documentações exaustivas.

.PP
Além disso, ela facilita o versionamento de documentos,
uma vez que qualquer código

.I dot
pode ser armazenado em um arquivo de texto simples.

.PP
Um arquivo
.I dot
é lido e interpretado por um conjunto de ferramentas
chamado
.I Graphviz,
das quais podem gerar documentos de diversos formatos.
Esses utilitários consomem pouquíssimos recursos e são
capazes de manipular grafos complexos em pouco tempo.

.NH 2
Empregabilidade

.PP
Atualmente, a linguagem
.I dot
e o seu conjunto de interpretadores
.I Graphviz
possuem importantes aplicações no planejamento de redes,
bioinformática, engenharia de software, desenvolvimento
web com banco de dados, machine learning e outras áreas
técnicas.

.PP
Isso nos mostra a abrangente utilidade
da ferramenta e o seu valor em situações
reais.

.bp
.NH 1
Os primeiros passos

.NH 2
Elementos

.PP
Antes de construirmos os nossos primeiros diagramas,
precisamos entender quais são os elementos básicos que
compõem um documento
.I dot.

.NH 3
.I graph

.PP
Na linguagem
.I dot,
o termo grafo faz referência a área onde pontos
(vértices) e ligações (arestas) são inseridas e
estruturadas. Neles, é possivel definir como os nós
e arestas serão posicionados, além de outras
configurações mais sofisticadas. Todos os elementos
contidos em um grafo são cercados por chaves ``{ }''.
Existem dois tipos de grafos:

.sp
.PP
\(bu graph (não direcionados ou ponderados): não
possuem arestas com direção definida, ou seja, não
há uma sequência de ligações entre os vértices. Por
exemplo:

.sp
.LP
.I Imagem:

.PSPIC -C images/nondir_graph/nondir.ps

.LP
.I Código-fonte:

.BD
graph {
        rankdir=LR

        X -- Y [label="ponderado"]
}
.DE

.LP
Observe que vértice
.I X
não aponta para o vértice
.I Y
e tampouco o
.I Y
para o
.I X.

.sp
.PP
\(bu digraph (direcionados): Já os direcionados, como o nome diz,
possuem direção; começam no vértice inicial e terminam no vértice final. Veja um exemplo:

.LP
.I Imagem:

.PSPIC -C images/dir_graph/dir.ps

.LP
.I Código-fonte:

.BD
digraph {
        rankdir=LR

        X -> Y [label="direcionado"]
}
.DE

.LP
Nesse caso, o vértice
.I X
aponta para o vértice
.I Y;
ou seja,
o ``X'' é o vértice inicial
e o ``Y'' o vértice final.

.NH 3
.I node
.PP
Os nodes...

.NH 3
.I edge
.PP
Os edges...

\# inserir aqui, uma imagem
\# explicativa sobre os assuntos
\# anteriores

.NH 1
Estruturando o documento
.PP
Até o momento...

.NH 2
.I
subgraph
.PP
O subgraph...

.NH 2
.I
rank
.PP
O atributo rank...

.NH 2
.I
rankdir
.PP
O atributo rankdir...

.NH 1
Personalizando o documento
.PP
A partir de agora...

.NH 2
Atributos
.PP
Os atributos são...

.IP
\(bu
.I
graph
.PP
Os atributos dos grafos...

.IP
\(bu
.I
node
.PP
Os atributos dos nós...

.IP
\(bu
.I
edge
.PP
Os atributos das arestas...

.NH 1
Entendendo a documentação
.PP
Primeiramente, eu gostaria de lhe dar os parabéns
por ter aprendido os conceitos e chegado até aqui...
(draft)
